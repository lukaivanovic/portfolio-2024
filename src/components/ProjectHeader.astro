---
interface Props {
  name: string;
  duration: string;
  description: string;
  description2: string;
  numeralSvg: string;
  accentColor: string; // New prop for the color
}

function hexToRGB(hex: string) {
  // Remove the # if present
  hex = hex.replace("#", "");

  // Parse the hex values
  const r = parseInt(hex.substring(0, 2), 16);
  const g = parseInt(hex.substring(2, 4), 16);
  const b = parseInt(hex.substring(4, 6), 16);

  // Return RGB values as a string
  return `${r}, ${g}, ${b}`;
}

const {
  name,
  duration,
  description,
  description2,
  numeralSvg,
  accentColor = "#0275DF",
}: Props = Astro.props;
---

<style define:vars={{ "accent-color": hexToRGB(accentColor) }}></style>

<section class="pb-[80px]">
  <!-- Project Number -->
  <div class="container -wide flex flex-row items-center pb-[80px]">
    <div class={`h-[1px] w-[16px] bg-[var(--color-border)] hidden lg:block`}>
    </div>
    <div
      class={`text-[var(--color-accent)] w-[28px] h-[28px] bg-[#e7e6e6] border-2 border-[var(--color-bg)] outline outline-1 outline-[#e7e6e6] z-10 flex items-center justify-center`}
    >
      <Fragment set:html={numeralSvg} />
    </div>
    <div class={`h-[1px] flex-grow bg-[var(--color-border)]`}></div>
  </div>

  <div class="container flex flex-col justify-between lg:flex-row">
    <div class="flex flex-col-reverse lg:flex-col gap-2">
      <h1 class="w-full lg:w-[420px] text-[var(--color-primary)]">
        {name}
      </h1>
      <p class="text-xs uppercase text-[var(--color-secondary)]">
        {duration}
      </p>
    </div>
    <div
      class="text-[var(--color-secondary)] pt-2 flex flex-col lg:flex-row gap-10 text-justify"
    >
      <p set:html={description} class="lg:max-w-[300px] w-full lg:mt-0 mt-4" />
      <p set:html={description2} class="lg:max-w-[300px] w-full" />
    </div>
  </div>
</section>
